name: deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: npm ci --ignore-scripts --no-audit
      - name: Test
        run: npm test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    env:
      IMAGE: aussidavid/thelinkedpeople-monday.com-integration
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build
        run: docker build . --file Dockerfile --cache-from $IMAGE:latest --tag $IMAGE:latest
      - name: Push
        run: docker push $IMAGE:latest
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      IMAGE: aussidavid/thelinkedpeople-monday.com-integration
    steps:
      - name: Upload docker stack configuration
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "thelinkedpeople-monday.com-integration"
      - name: Update and tidy up docker stack on remote host
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE
          script: |
            docker pull $IMAGE:latest &&
            docker stack deploy --prune -c thelinkedpeople-monday.com-integration/docker-compose.prod.yml thelinkedpeople;
            rm -rfv thelinkedpeople-monday.com-integration/docker-compose.prod.yml
